import type { DatabaseType, QueryRunner } from "./QueryRunner";
import type * as ConnectionPool from 'tedious-connection-pool';
import { AbstractPoolQueryRunner } from "./AbstractPoolQueryRunner";
export declare class TediousPoolQueryRunner extends AbstractPoolQueryRunner {
    readonly database: DatabaseType;
    readonly pool: ConnectionPool;
    constructor(pool: ConnectionPool);
    useDatabase(database: DatabaseType): void;
    getNativeRunner(): unknown;
    addParam(params: any[], value: any): string;
    addOutParam(_params: any[], _name: string): string;
    createResolvedPromise<RESULT>(result: RESULT): Promise<RESULT>;
    protected createQueryRunner(): Promise<QueryRunner>;
    protected releaseQueryRunner(queryRunner: QueryRunner): void;
}
